Featherweight Firefox:
Contains browser.ml, domain.ml, io.ml, reactive.ml, util.ml, doc.ccs
-------------------------------------------------------------------
Copyright 2010, Aaron Bohannon
bohannon@cis.upenn.edu

Version 1.3 with changes to version 1.0

Run 'make all' to compile the files with an OCaml compiler.
Run 'make doc' to generate HTML documentation using ocamldoc.

====================================================================
Secure wrapper :
Contains wrapper.ml, policyfun.ml, policy.ml, test.ml, policy-fine-grained.ml, policy-high-low.ml, policy-origin-separation.ml, test-air.ml, test-taxcalc.ml
---------------------------------------------------------------------
Version 1.0

Start the ocaml console by running "ocaml". In the console:
- Start the run with 
	#use "run.ml";;
- Run the original browser on inputs "inputs" with
	original inputs;;
- Run the wrapped system on inputs "inputs" with
	wrapper inputs;;
- To quit ocaml, run 
	#quit;;

This implementation is done for three types of policies:
1) High\Low policy (policy-high-low.ml); 
2) Origin separation policy (policy-origin-separation.ml);
3) Fine-grained origin separation policy (policy-fine-grained.ml)

In order to try a policy, mentioned in the brackets file should be renamed to "policy.ml".

We propose two tests: testing for the tax calculator example (test-taxcalx.ml) and for the air company (test-air.ml). To run the example rename the corresponding file to "test.ml".


